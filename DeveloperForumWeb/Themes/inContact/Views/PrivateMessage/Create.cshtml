@using MVCForum.Utilities
@using System.Configuration
@model MVCForum.Website.ViewModels.CreatePrivateMessageViewModel
@{
    ViewBag.Title = Html.LanguageString("PM.CreatePrivateMessage");
}
@section Scripts
{
    @(
                Bundle.JavaScript()
                    .Add("~/Scripts/jquery.validate.min.js")
                    .Add("~/Scripts/jquery.validate.unobtrusive.min.js")

                    .MvcRender("~/scripts/cache/validate-combined_#.js")
    )
    <script src="@Url.Content("~/Scripts/jquery-ui-1.10.3.min.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {
            $("input#UserToUsername").autocomplete({
                source: app_base + "Members/Autocomplete"
            });
        });
    </script>
    @if (!Context.IsMobileDevice())
    {
        <link href="@Url.Content("~/scripts/markdown/markdown.css")" rel="stylesheet" />
        <script src="@Url.Content("~/scripts/markdown/Markdown.Converter.js")"></script>
        <script src="@Url.Content("~/scripts/markdown/Markdown.Sanitizer.js")"></script>
        <script src="@Url.Content("~/scripts/markdown/Markdown.Editor.js")"></script>
        <script type="text/javascript">
            $(function () {
                //Bit of a hack but won't work without
                var wdinput = $('.wmd-input');
                wdinput.attr('id', "wmd-input");

                var converter = new Markdown.Converter();
                //var converter = Markdown.getSanitizingConverter();
                var editor = new Markdown.Editor(converter);
                editor.run();
            });
        </script>
    }

}
@section side
{
    @Html.Action("ListCategorySideMenu", "Category")
    @Html.Action("PopularTags", "Tag")
}

<section class="breadcrumb-trail page-header">
    <a href="/">Home</a> &raquo;
    <a href="@ConfigurationManager.AppSettings["ForumHomeUrl"]">Forum</a> &raquo;
    @Html.ActionLink("Received Private Messages", "Index") &raquo;
    @ViewBag.Title
</section>

@using (Html.BeginForm("Create", "PrivateMessage", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary(false)
    @Html.AntiForgeryToken()

    <fieldset>
        <legend>@ViewBag.Title</legend>
        <div class="editor-label">
            @Html.LabelFor(model => model.UserToUsername)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserToUsername, new { @class = "usertotextbox" })
            @Html.ValidationMessageFor(model => model.UserToUsername)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Subject)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Subject)
            @Html.ValidationMessageFor(model => model.Subject)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Message)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Message)
            @Html.ValidationMessageFor(model => model.Message)
        </div>
        <div class="submit-holder">
            <input type="submit" class="btn btn-large btn-success" value="@Html.LanguageString("PM.Send")" />
        </div>
    </fieldset>
}

@if (!string.IsNullOrEmpty(Model.PreviousMessage))
{
    <p class="previousmessageholder">
        <span class="originalmessage">@Html.LanguageString("PM.OriginalMessage")</span>
        @Html.Raw(AppHelpers.ConvertPostContent(Model.PreviousMessage))
    </p>
}