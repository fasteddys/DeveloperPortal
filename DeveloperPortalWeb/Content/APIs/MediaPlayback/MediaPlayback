{
  "media-playback_v1_contacts": {
    "get": {
      "tags": [ "Recordings" ],
      "summary": "Access the full contact based on ACD Call ID. ",
      "description": "Access the full contact (the entire interaction with all segments) based on ACD Call ID. The ACD Call ID depends on the ACD solution, for example, this is the same as the inContact Master Contact ID. **Keep in mind that using the ACD Call ID GET method, you can play back interactions recorded from December 13, 2018. Playing back an interaction recorded before December 13, 2018 will give an Interaction Not Found error. To play back earlier recordings, use the Contact ID or Segment ID GET methods. <br/><br/><b><i><span style='color:red'>NOTE: </span></i></b> Try it out feature for this API is not supported. <div class='tabs_wrapper' data-path='mediaplayback_contacts.html'></div>",
      "operationId": "getACDContactRecordingData",
      "parameters": [
        {
          "name": "acd-call-id",
          "in": "query",
          "description": "Unique identifier received from the ACD",
          "style": "form",
          "explode": true,
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "media-type",
          "in": "query",
          "default": "all",
          "description": "Interaction type (such as voice-only, voice-and-screen, chat, email)",
          "required": false,
          "style": "form",
          "explode": true,
          "schema": {
            "type": "array",
            "example": [ "all" ],
            "items": {
              "type": "string",
              "enum": [ "voice-only", "voice-and-screen", "chat", "email", "all" ]
            }
          }
        },
        {
          "name": "exclude-waveforms",
          "in": "query",
          "description": "If your product does not display waveforms (sound waves) during playback, exclude them in the API to improve loading time. This parameter is only relevant for 'voice-only' or 'voice-and-screen' media types.",
          "required": false,
          "style": "form",
          "explode": true,
          "schema": {
            "type": "boolean",
            "default": true,
            "enum": [ true, false ]
          }
        },
        {
                  "name": "isDownload",
                  "in": "query",
                  "description": "Download the media file for 'voice-only' and 'voice-and-screen' media types.",
                  "required": false,
                  "schema": {
                     "type": "boolean",
                     "enum": [
                        true,
                        false
                     ],
                     "default": false
                  }
               }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiResponse"
              },
              "example": {
                "$ref": "#/components/examples/InteractionExample"
              }
            }
          }
        },
        "400": {
          "description": "400 Invalid Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorApiResponse"
              },
              "example": {
                "$ref": "#/components/examples/Error400Example"
              }
            }
          }
        },
        "401": {
          "description": "401 Not Authorized to Play Back",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorApiResponse"
              },
              "example": {
                "$ref": "#/components/examples/Error401Example"
              }
            }
          }
        },
        "403": {
          "description": "403 Permissions Required",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorApiResponse"
              },
              "example": {
                "$ref": "#/components/examples/Error403Example"
              }
            }
          }
        },
        "404": {
          "description": "404 Interaction Not Found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorApiResponse"
              },
              "example": {
                "$ref": "#/components/examples/Error404Example"
              }
            }
          }
        },
        "500": {
          "description": "500 Internal Server Error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorApiResponse"
              },
              "example": {
                "$ref": "#/components/examples/Error500Example"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "categoryMatches": {
        "type": "object",
        "properties": {
          "categoryHierarchy": {
            "type": "array",
            "description": "The list of the categories that was identified by QM Analytics",
            "items": {
              "type": "string",
              "description": "The identified category"
            }
          },
          "secondsOffsets": {
            "type": "array",
            "description": "When the category was identified (time offset in seconds) from the start of the interaction",
            "items": {
              "type": "number",
              "format": "int32"
            }
          },
          "confidence": {
            "type": "number",
            "description": "When QM Analytics identifies a category, the confidence in the match is defined as a percentage",
            "format": "int32"
          }
        }
      },
      "sentiment": {
        "type": "object",
        "properties": {
          "overallSentiment": {
            "type": "string",
            "description": "The sentiments that were identified for the segment, this parameter is only relevant for stereo recordings and is null if you don't have QM Analytics",
            "enum": [ "POSITIVE", "NEGATIVE", "MIXED", "NEUTRAL" ]
          },
          "segmentStartTime": {
            "type": "string",
            "description": "Time the segment started with the identified sentiment, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "channel": {
            "type": "integer",
            "description": "Maps the sentiment to a specific audio channel",
            "format": "int32"
          }
        }
      },
      "segmentsData": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "description": "Date and time the segment starts, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "description": "Date and time the segment ends, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "acwEndTime": {
            "type": "string",
            "description": "Date and time the After Call Work (ACW) ends, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "openReasonType": {
            "type": "string",
            "description": "Why the segment was initiated",
            "enum": [ "SEGMENT", "TRANSFER", "CONFERENCE" ]
          },
          "closeReasonType": {
            "type": "string",
            "description": "Why the segment was ended",
            "enum": [ "SEGMENT", "TRANSFER", "CONFERENCE" ]
          },
          "directionType": {
            "type": "string",
            "description": "How the segment was initiated",
            "enum": [ "INBOUND", "OUTBOUND", "INTERNAL" ]
          },
          "source": {
            "type": "string",
            "description": "ACD source, such as inContact, Uptivity, 3rd recording solutions",
            "nullable": true
          }
        }
      },
      "waveformData": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "integer",
            "description": "Channel for the PCM data",
            "format": "double"
          },
          "normalizedPcmData": {
            "type": "array",
            "items": {
              "type": "number",
              "description": "Normalized PCM data",
              "format": "double"
            }
          }
        }
      },
      "voiceStage": {
        "type": "object",
        "properties": {
          "stageType": {
            "type": "string",
            "description": "The stage in audio recording",
            "enum": [ "ACTIVE", "HOLD", "MASK", "TRANSFER" ]
          },
          "startTime": {
            "type": "string",
            "description": "Date and time the voice recording starts, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "description": "Date and time the voice recording ends, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "recordingID": {
            "type": "string",
            "description": "Parameter used internally by CXone",
            "format": "uuid"
          },
          "displays": {
            "type": "string",
            "description": "The configuration of the agent screens being recorded (size in pixels), this parameter is not used for voice recording",
            "nullable": true
          }
        }
      },
      "displayProperties": {
        "type": "object",
        "properties": {
          "width": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          },
          "topLeftX": {
            "type": "integer"
          },
          "topLeftY": {
            "type": "integer"
          }
        }
      },
      "screenStage": {
        "type": "object",
        "properties": {
          "stageType": {
            "type": "string",
            "description": "The stage in screen recording",
            "enum": [ "ACTIVE", "HOLD", "MASK", "TRANSFER" ]
          },
          "startTime": {
            "type": "string",
            "description": "Date and time the voice recording starts, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "description": "Date and time the voice recording ends, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "recordingID": {
            "type": "string",
            "description": "Parameter used internally by CXone",
            "format": "uuid"
          },
          "displays": {
            "type": "array",
            "description": "Configuration of the agent screens being recorded (size in pixels)",
            "items": {
              "$ref": "#/components/schemas/displayProperties"
            }
          }
        }
      },
      "VoiceAndScreenParticipant": {
        "type": "object",
        "properties": {
          "participantType": {
            "type": "string",
            "description": "Type of participant",
            "enum": [ "AGENT", "CUSTOMER" ]
          },
          "agentName": {
            "type": "string",
            "description": "Name of the agent (null if the participantType is CUSTOMER)"
          },
          "participantId": {
            "type": "string",
            "description": "Unique identifier of the participant (ACD participant ID)"
          },
          "userId": {
            "type": "string",
            "description": "Unique identifier of the agent (CXone user ID), this parameter is null if the participantType is CUSTOMER",
            "format": "uuid"
          },
          "voiceStages": {
            "type": "array",
            "description": "The stage in audio recording",
            "items": {
              "$ref": "#/components/schemas/voiceStage"
            }
          },
          "screenStages": {
            "type": "array",
            "description": "The stage in screen recording, this parameter is not used if the participantType is CUSTOMER",
            "items": {
              "$ref": "#/components/schemas/screenStage"
            }
          },
          "channel": {
            "type": "integer",
            "description": "Maps the agent to a specific audio channel",
            "format": "int32"
          }
        }
      },
      "ChatParticipant": {
        "type": "object",
        "properties": {
          "participantType": {
            "type": "string",
            "description": "Type of participant",
            "enum": [ "AGENT", "CUSTOMER" ]
          },
          "participantName": {
            "type": "string",
            "description": "Name of the participant, this parameter is null if the participantType is CUSTOMER"
          }
        }
      },
      "ChatMessages": {
        "type": "object",
        "properties": {
          "participantType": {
            "type": "string",
            "description": "Type of participant",
            "enum": [ "AGENT", "CUSTOMER" ]
          },
          "participantName": {
            "type": "string",
            "description": "Name of the participant, this parameter is null if the participantType is CUSTOMER"
          },
          "text": {
            "type": "string",
            "description": "What is displayed in the chat for the name of the participant"
          },
          "timeStamp": {
            "type": "string",
            "description": "Timestamp of the specific message, configured according to ISO8601 RFC3339",
            "format": "date-time"
          }
        }
      },
      "EmailActions": {
        "type": "object",
        "properties": {
          "timeStamp": {
            "type": "string",
            "description": "Timestamp of the email action, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "action": {
            "type": "string",
            "description": "Email events",
            "enum": [ "Reply", "NewOutbound", "Transfer", "Forward", "Accept", "Send" ]
          }
        }
      },
      "EmailParticipant": {
        "type": "object",
        "properties": {
          "participantType": {
            "type": "string",
            "description": "Type of participant",
            "enum": [ "AGENT", "CUSTOMER" ]
          },
          "participantName": {
            "type": "string",
            "description": "Name of the participant"
          },
          "actions": {
            "type": "array",
            "description": "Email events",
            "items": {
              "$ref": "#/components/schemas/EmailActions"
            }
          },
          "content": {
            "$ref": "#/components/schemas/EmailParticipant_content"
          }
        }
      },
      "VoiceAndScreen": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "description": "Date and time the interaction starts, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "description": "Date and time the interaction ends, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "acwEndTime": {
            "type": "string",
            "description": "Date and time the After Call Work (ACW) ends, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "fileToPlayUrl": {
            "type": "string",
            "description": "The temporary media storage location (URL)",
            "format": "uri"
          },
          "videoImageUrl": {
            "type": "string",
            "description": "Poster (the first frame of the video), this parameter is typically null",
            "format": "uri"
          },
          "waveformDataList": {
            "type": "array",
            "description": "Normalized PCM data for each channel, used to visualize the waveforms (not applicable if the exclude-waveforms parameter is set to false)",
            "items": {
              "$ref": "#/components/schemas/waveformData"
            }
          },
          "participants": {
            "type": "array",
            "description": "The participants in the interaction",
            "items": {
              "$ref": "#/components/schemas/VoiceAndScreenParticipant"
            }
          },
          "segmentsDataList": {
            "type": "array",
            "description": "A segment is part of an interaction between one party and another, such as a customer and an agent",
            "items": {
              "$ref": "#/components/schemas/segmentsData"
            }
          },
          "categoryMatchesList": {
            "type": "array",
            "description": "The categories that were identified, this parameter is only relevant for stereo recordings and is null if you don't have QM Analytics",
            "items": {
              "$ref": "#/components/schemas/categoryMatches"
            }
          },
          "sentiments": {
            "type": "array",
            "description": "The sentiments that were identified for the segment, this parameter is only relevant for stereo recordings and is null if you don't have QM Analytics",
            "items": {
              "$ref": "#/components/schemas/sentiment"
            }
          }
        }
      },
      "Chat": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "description": "Date and time the interaction starts, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "description": "Date and time the interaction ends, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "transferPoints": {
            "type": "string",
            "description": "Time the chat was transferred to a different agent, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "participants": {
            "type": "array",
            "description": "The participants in the interaction",
            "items": {
              "$ref": "#/components/schemas/ChatParticipant"
            }
          },
          "messages": {
            "type": "array",
            "description": "Each message in the chat, this is an array",
            "items": {
              "$ref": "#/components/schemas/ChatMessages"
            }
          }
        }
      },
      "Email": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "description": "Date and time the interaction starts, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "description": "Date and time the interaction ends, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "acwEndTime": {
            "type": "string",
            "description": "Date and time the After Call Work (ACW) ends, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "participants": {
            "type": "array",
            "description": "The participants in the interaction",
            "items": {
              "$ref": "#/components/schemas/EmailParticipant"
            }
          }
        }
      },
      "Interaction": {
        "type": "object",
        "properties": {
          "mediaType": {
            "type": "string",
            "description": "Interaction type",
            "enum": [ "voice-only", "voice-and-screen", "chat", "email" ]
          },
          "startTime": {
            "type": "string",
            "description": "Date and time the interaction starts, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "description": "Date and time the interaction ends, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "data": {
            "description": "Interaction details",
            "oneOf": [
              {
                "$ref": "#/components/schemas/VoiceAndScreen"
              },
              {
                "$ref": "#/components/schemas/Chat"
              },
              {
                "$ref": "#/components/schemas/Email"
              }
            ]
          },
          "@type": {
            "type": "string",
            "description": "The media @type of the interaction (This attribute is automatically assigned)",
            "enum": [ "call", "chat", "email" ]
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "contactId": {
            "type": "string",
            "description": "Unique identifier of the contact (the entire interaction with all the segments)",
            "format": "uuid"
          },
          "Interactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interaction"
            }
          }
        }
      },
      "ErrorApiResponse": {
        "type": "object",
        "properties": {
          "internalCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "EmailParticipant_content": {
        "type": "object",
        "properties": {
          "sentTime": {
            "type": "string",
            "description": "Date and time the email was sent, configured according to ISO8601 RFC3339",
            "format": "date-time"
          },
          "from": {
            "type": "string",
            "description": "The sender's email address",
            "format": "email"
          },
          "to": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "The addressee's email address",
              "format": "email"
            }
          },
          "cc": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Email address of contacts copied on the email",
              "format": "email"
            }
          },
          "bcc": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Email address of contacts blindly copied on the email",
              "format": "email"
            }
          },
          "subject": {
            "type": "string",
            "description": "Subject of the email"
          },
          "body": {
            "type": "string",
            "description": "Body of the email"
          }
        }
      }
    },
    "examples": {
      "InteractionExample": {
        "value": {
          "contactId": "11e766de-4ace-33d0-9ff6-0242ac110004",
          "Interactions": [
            {
              "Interaction": {
                "mediaType": "voice-and-screen",
                "startTime": "2018-11-20T08:20:31.941Z",
                "endTime": "2018-11-20T08:25:56.957Z",
                "data": {
                  "startTime": "2018-11-20T08:20:31.941Z",
                  "endTime": "2018-11-20T08:25:56.957Z",
                  "acwEndTime": "2018-11-20T08:27:09.643Z",
                  "fileToPlayUrl": "https://test-mcrplaybackmanager-4b5e-9234-54cbe7855ca1.mp4",
                  "waveformDataList": [
                    {
                      "channel": 0,
                      "normalizedPcmData": [ 0.001, 0.001, 0.001 ]
                    }
                  ],
                  "participantDataList": [
                    {
                      "participantType": "AGENT",
                      "agentName": "Mary Walker",
                      "participantId": "271863",
                      "userId": "11e846d2-dd9f-6f10-9aef-0242ac110002",
                      "voiceStages": [
                        {
                          "stageType": "ACTIVE",
                          "startTime": "2018-11-20T08:20:31.941Z",
                          "endTime": "2018-11-20T08:25:56.957Z",
                          "recordingID": "e079511b-c077-489e-85a3-24b1b147d3c7"
                        }
                      ],
                      "screenStages": [
                        {
                          "stageType": "ACTIVE",
                          "startTime": "2018-11-20T08:20:31.941Z",
                          "endTime": "2018-11-20T08:25:56.957Z",
                          "recordingID": "e7621f2c-32e4-47cd-bfc5-29a48343f7e0",
                          "displays": [
                            {
                              "width": 1680,
                              "height": 1050,
                              "topLeftX": -1680,
                              "topLeftY": 0
                            },
                            {
                              "width": 1680,
                              "height": 1050,
                              "topLeftX": 0,
                              "topLeftY": 0
                            },
                            {
                              "width": 1366,
                              "height": 768,
                              "topLeftX": 1680,
                              "topLeftY": 0
                            }
                          ]
                        }
                      ],
                      "channel": 0
                    },
                    {
                      "participantType": "CUSTOMER",
                      "participantId": "68367118",
                      "voiceStages": [
                        {
                          "stageType": "ACTIVE",
                          "startTime": "2018-11-20T08:20:31.941Z",
                          "endTime": "2018-11-20T08:25:56.957Z",
                          "recordingID": "e079511b-c077-489e-85a3-24b1b147d3c7"
                        }
                      ],
                      "screenStages": [ ],
                      "channel": 0
                    }
                  ],
                  "segmentsDataList": [
                    {
                      "startTime": "2018-11-20T08:20:31.941Z",
                      "endTime": "2018-11-20T08:25:56.957Z",
                      "acwEndTime": "2018-11-20T08:27:09.643Z",
                      "openReasonType": "SEGMENT",
                      "closeReasonType": "SEGMENT",
                      "directionType": "OUTBOUND"
                    }
                  ],
                  "categoryMatchesList": [
                    {
                      "categoryHierarchy": [ "Account Inquiries", "Account Problems" ],
                      "secondsOffsets": [ 24 ],
                      "confidence": 95
                    }
                  ],
                  "sentiments": [
                    {
                      "overallSentiment": "POSITIVE",
                      "segmentStartTime": "2018-11-20T08:20:31.941Z",
                      "channel": 1
                    },
                    {
                      "overallSentiment": "POSITIVE",
                      "segmentStartTime": "2018-11-20T08:20:31.941Z",
                      "channel": 0
                    }
                  ]
                }
              }
            },
            {
              "Interaction": {
                "mediaType": "chat",
                "startTime": "2018-11-21T08:27:09.643Z",
                "endTime": "2018-11-21T18:20:31.941Z",
                "data": {
                  "startTime": "2018-11-21T08:27:09.643Z",
                  "endTime": "2018-11-21T18:20:31.941Z",
                  "transferPoints": [ "2018-11-21T10:34:23.433Z" ],
                  "participants": [
                    {
                      "participantType": "AGENT",
                      "participantName": "Kevin Allen"
                    },
                    {
                      "participantType": "CUSTOMER",
                      "participantName": ""
                    }
                  ],
                  "messages": [
                    {
                      "participantType": "AGENT",
                      "participantName": "Kevin Allen",
                      "text": "agent 1",
                      "timeStamp": "2018-11-21T10:35:23.643Z"
                    },
                    {
                      "participantType": "CUSTOMER",
                      "participantName": "",
                      "text": "Betty Alexander"
                    }
                  ]
                }
              }
            },
            {
              "Interaction": {
                "mediaType": "email",
                "startTime": "2018-11-21T18:30:09.643Z",
                "endTime": "2018-11-21T18:36:36.347Z",
                "data": {
                  "startTime": "2018-11-21T18:30:09.643Z",
                  "endTime": "2018-11-21T18:34:56.957Z",
                  "acwEndTime": "2018-11-21T18:36:36.347Z",
                  "participants": [
                    {
                      "participantType": "AGENT",
                      "participantName": "Angela Bryant",
                      "actions": [
                        {
                          "timeStamp": "2018-11-21T18:30:09.643Z",
                          "action": "NewOutbound"
                        },
                        {
                          "timeStamp": "2018-11-21T18:34:56.957Z",
                          "action": "Send"
                        }
                      ]
                    }
                  ],
                  "content": {
                    "sentTime": "2018-11-21T18:34:56.957Z",
                    "from": "doNotAnswer@ourcompany.com",
                    "to": [ "angelab@yourcompany.com" ],
                    "cc": [ ],
                    "bcc": [ ],
                    "subject": "Hello",
                    "body": "Hi"
                  }
                }
              }
            }
          ]
        }
      },
      "Error400Example": {
        "value": {
          "internalCode": 8100,
          "message": "Invalid request."
        }
      },
      "Error401Example": {
        "value": {
          "internalCode": 8300,
          "message": "This interaction is blocked due to compliance requirements."
        }
      },
      "Error403Example": {
        "value": {
          "internalCode": 8500,
          "message": "No permission to access this interaction."
        }
      },
      "Error404Example": {
        "value": {
          "internalCode": 8200,
          "message": "Interaction media not found."
        }
      },
      "Error500Example": {
        "value": {
          "internalCode": 8400,
          "message": "Internal server error."
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}